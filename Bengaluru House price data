{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "965373ed-3ca6-4dfc-8095-1b2e0218eb9a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_absolute_error \n",
    "from sklearn.metrics import mean_squared_error \n",
    "from sklearn.metrics import median_absolute_error\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d1bbbe41-b43b-440c-a392-b12368f9ed6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>area_type</th>\n",
       "      <th>availability</th>\n",
       "      <th>location</th>\n",
       "      <th>size</th>\n",
       "      <th>society</th>\n",
       "      <th>total_sqft</th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Super built-up  Area</td>\n",
       "      <td>19-Dec</td>\n",
       "      <td>Electronic City Phase II</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>Coomee</td>\n",
       "      <td>1056</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>39.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Plot  Area</td>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Chikka Tirupathi</td>\n",
       "      <td>4 Bedroom</td>\n",
       "      <td>Theanmp</td>\n",
       "      <td>2600</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>120.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Built-up  Area</td>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Uttarahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1440</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>62.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Super built-up  Area</td>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Lingadheeranahalli</td>\n",
       "      <td>3 BHK</td>\n",
       "      <td>Soiewre</td>\n",
       "      <td>1521</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Super built-up  Area</td>\n",
       "      <td>Ready To Move</td>\n",
       "      <td>Kothanur</td>\n",
       "      <td>2 BHK</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1200</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              area_type   availability                  location       size  \\\n",
       "0  Super built-up  Area         19-Dec  Electronic City Phase II      2 BHK   \n",
       "1            Plot  Area  Ready To Move          Chikka Tirupathi  4 Bedroom   \n",
       "2        Built-up  Area  Ready To Move               Uttarahalli      3 BHK   \n",
       "3  Super built-up  Area  Ready To Move        Lingadheeranahalli      3 BHK   \n",
       "4  Super built-up  Area  Ready To Move                  Kothanur      2 BHK   \n",
       "\n",
       "   society total_sqft  bath  balcony   price  \n",
       "0  Coomee        1056   2.0      1.0   39.07  \n",
       "1  Theanmp       2600   5.0      3.0  120.00  \n",
       "2      NaN       1440   2.0      3.0   62.00  \n",
       "3  Soiewre       1521   3.0      1.0   95.00  \n",
       "4      NaN       1200   2.0      1.0   51.00  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds=pd.read_csv(\"Bengaluru_House_Data.csv\")\n",
    "ds.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "aa292bd6-57cc-4baf-84bb-8407f7499721",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(13320, 9)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6f865d66-517b-4f6d-85a0-6eede6814185",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>13247.000000</td>\n",
       "      <td>12711.000000</td>\n",
       "      <td>13320.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2.692610</td>\n",
       "      <td>1.584376</td>\n",
       "      <td>112.565627</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.341458</td>\n",
       "      <td>0.817263</td>\n",
       "      <td>148.971674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>72.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>120.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>40.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3600.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               bath       balcony         price\n",
       "count  13247.000000  12711.000000  13320.000000\n",
       "mean       2.692610      1.584376    112.565627\n",
       "std        1.341458      0.817263    148.971674\n",
       "min        1.000000      0.000000      8.000000\n",
       "25%        2.000000      1.000000     50.000000\n",
       "50%        2.000000      2.000000     72.000000\n",
       "75%        3.000000      2.000000    120.000000\n",
       "max       40.000000      3.000000   3600.000000"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "147368ed-ac0d-4219-a221-b37f0ef83abb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 13320 entries, 0 to 13319\n",
      "Data columns (total 9 columns):\n",
      " #   Column        Non-Null Count  Dtype  \n",
      "---  ------        --------------  -----  \n",
      " 0   area_type     13320 non-null  object \n",
      " 1   availability  13320 non-null  object \n",
      " 2   location      13319 non-null  object \n",
      " 3   size          13304 non-null  object \n",
      " 4   society       7818 non-null   object \n",
      " 5   total_sqft    13320 non-null  object \n",
      " 6   bath          13247 non-null  float64\n",
      " 7   balcony       12711 non-null  float64\n",
      " 8   price         13320 non-null  float64\n",
      "dtypes: float64(3), object(6)\n",
      "memory usage: 936.7+ KB\n"
     ]
    }
   ],
   "source": [
    "ds.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f25821b3-1798-4912-93a0-b0c13204ba81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(ds.isnull(),yticklabels=False,cbar=False,cmap='viridis')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d8a39f20-cb20-4468-8131-f0c3efb6224f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "area_type          0\n",
       "availability       0\n",
       "location           1\n",
       "size              16\n",
       "society         5502\n",
       "total_sqft         0\n",
       "bath              73\n",
       "balcony          609\n",
       "price              0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.isnull().sum()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "991c7cd3-67a4-462a-a883-32d8d2b6891d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "area_type       0\n",
       "availability    0\n",
       "location        0\n",
       "size            0\n",
       "society         0\n",
       "total_sqft      0\n",
       "bath            0\n",
       "balcony         0\n",
       "price           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#drop all null values\n",
    "ds2=ds.dropna()\n",
    "ds2.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "dc394a1b-9817-4644-8752-8f76c39f5a92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(7496, 9)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7b4f5287-bc67-4a8b-9547-2760e44f4f38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(ds2.isnull(),yticklabels=False,cbar=False,cmap='viridis')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "91f11c14-9ca5-4d75-8ec5-9bd2910f9ef3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "      <th>area_type_Carpet  Area</th>\n",
       "      <th>area_type_Plot  Area</th>\n",
       "      <th>area_type_Super built-up  Area</th>\n",
       "      <th>availability_15-Aug</th>\n",
       "      <th>availability_15-Dec</th>\n",
       "      <th>availability_15-Jun</th>\n",
       "      <th>availability_16-Dec</th>\n",
       "      <th>...</th>\n",
       "      <th>total_sqft_986</th>\n",
       "      <th>total_sqft_987</th>\n",
       "      <th>total_sqft_990</th>\n",
       "      <th>total_sqft_991</th>\n",
       "      <th>total_sqft_992</th>\n",
       "      <th>total_sqft_993</th>\n",
       "      <th>total_sqft_994</th>\n",
       "      <th>total_sqft_995</th>\n",
       "      <th>total_sqft_996</th>\n",
       "      <th>total_sqft_999</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>39.07</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>120.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>38.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>295.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 4998 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    bath  balcony   price  area_type_Carpet  Area  area_type_Plot  Area  \\\n",
       "0    2.0      1.0   39.07                       0                     0   \n",
       "1    5.0      3.0  120.00                       0                     1   \n",
       "3    3.0      1.0   95.00                       0                     0   \n",
       "5    2.0      1.0   38.00                       0                     0   \n",
       "11   5.0      3.0  295.00                       0                     1   \n",
       "\n",
       "    area_type_Super built-up  Area  availability_15-Aug  availability_15-Dec  \\\n",
       "0                                1                    0                    0   \n",
       "1                                0                    0                    0   \n",
       "3                                1                    0                    0   \n",
       "5                                1                    0                    0   \n",
       "11                               0                    0                    0   \n",
       "\n",
       "    availability_15-Jun  availability_16-Dec  ...  total_sqft_986  \\\n",
       "0                     0                    0  ...               0   \n",
       "1                     0                    0  ...               0   \n",
       "3                     0                    0  ...               0   \n",
       "5                     0                    0  ...               0   \n",
       "11                    0                    0  ...               0   \n",
       "\n",
       "    total_sqft_987  total_sqft_990  total_sqft_991  total_sqft_992  \\\n",
       "0                0               0               0               0   \n",
       "1                0               0               0               0   \n",
       "3                0               0               0               0   \n",
       "5                0               0               0               0   \n",
       "11               0               0               0               0   \n",
       "\n",
       "    total_sqft_993  total_sqft_994  total_sqft_995  total_sqft_996  \\\n",
       "0                0               0               0               0   \n",
       "1                0               0               0               0   \n",
       "3                0               0               0               0   \n",
       "5                0               0               0               0   \n",
       "11               0               0               0               0   \n",
       "\n",
       "    total_sqft_999  \n",
       "0                0  \n",
       "1                0  \n",
       "3                0  \n",
       "5                0  \n",
       "11               0  \n",
       "\n",
       "[5 rows x 4998 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#encoder\n",
    "donehot=pd.get_dummies(ds2,columns=['area_type','availability','location','size','society'\n",
    "                            ,'total_sqft'],drop_first=True)\n",
    "ds3=donehot.copy()\n",
    "ds3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c4e2a9b3-f443-4d30-9633-640d2edd0bb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(bath                       0.50\n",
       " balcony                   -0.50\n",
       " price                    -33.75\n",
       " area_type_Carpet  Area     0.00\n",
       " area_type_Plot  Area       0.00\n",
       "                           ...  \n",
       " total_sqft_993             0.00\n",
       " total_sqft_994             0.00\n",
       " total_sqft_995             0.00\n",
       " total_sqft_996             0.00\n",
       " total_sqft_999             0.00\n",
       " Length: 4998, dtype: float64,\n",
       " bath                        4.50\n",
       " balcony                     3.50\n",
       " price                     188.25\n",
       " area_type_Carpet  Area      0.00\n",
       " area_type_Plot  Area        0.00\n",
       "                            ...  \n",
       " total_sqft_993              0.00\n",
       " total_sqft_994              0.00\n",
       " total_sqft_995              0.00\n",
       " total_sqft_996              0.00\n",
       " total_sqft_999              0.00\n",
       " Length: 4998, dtype: float64)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#outlires \n",
    "q1=ds3.quantile(0.25)\n",
    "q3=ds3.quantile(0.75)\n",
    "#q1,q3\n",
    "IQR=q3-q1\n",
    "#IQR\n",
    "lower=q1-1.5*IQR\n",
    "upper=q3+1.5*IQR\n",
    "lower,upper"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "8aef4eb6-f33e-4731-8498-7bd2e01ae4e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>price</th>\n",
       "      <th>area_type_Carpet  Area</th>\n",
       "      <th>area_type_Plot  Area</th>\n",
       "      <th>area_type_Super built-up  Area</th>\n",
       "      <th>availability_15-Aug</th>\n",
       "      <th>availability_15-Dec</th>\n",
       "      <th>availability_15-Jun</th>\n",
       "      <th>availability_16-Dec</th>\n",
       "      <th>...</th>\n",
       "      <th>total_sqft_986</th>\n",
       "      <th>total_sqft_987</th>\n",
       "      <th>total_sqft_990</th>\n",
       "      <th>total_sqft_991</th>\n",
       "      <th>total_sqft_992</th>\n",
       "      <th>total_sqft_993</th>\n",
       "      <th>total_sqft_994</th>\n",
       "      <th>total_sqft_995</th>\n",
       "      <th>total_sqft_996</th>\n",
       "      <th>total_sqft_999</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>39.07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>120.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>95.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>38.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>NaN</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 4998 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    bath  balcony   price  area_type_Carpet  Area  area_type_Plot  Area  \\\n",
       "0    2.0      1.0   39.07                     NaN                   NaN   \n",
       "1    NaN      3.0  120.00                     NaN                   NaN   \n",
       "3    3.0      1.0   95.00                     NaN                   NaN   \n",
       "5    2.0      1.0   38.00                     NaN                   NaN   \n",
       "11   NaN      3.0     NaN                     NaN                   NaN   \n",
       "\n",
       "    area_type_Super built-up  Area  availability_15-Aug  availability_15-Dec  \\\n",
       "0                              NaN                  NaN                  NaN   \n",
       "1                              NaN                  NaN                  NaN   \n",
       "3                              NaN                  NaN                  NaN   \n",
       "5                              NaN                  NaN                  NaN   \n",
       "11                             NaN                  NaN                  NaN   \n",
       "\n",
       "    availability_15-Jun  availability_16-Dec  ...  total_sqft_986  \\\n",
       "0                   NaN                  NaN  ...             NaN   \n",
       "1                   NaN                  NaN  ...             NaN   \n",
       "3                   NaN                  NaN  ...             NaN   \n",
       "5                   NaN                  NaN  ...             NaN   \n",
       "11                  NaN                  NaN  ...             NaN   \n",
       "\n",
       "    total_sqft_987  total_sqft_990  total_sqft_991  total_sqft_992  \\\n",
       "0              NaN             NaN             NaN             NaN   \n",
       "1              NaN             NaN             NaN             NaN   \n",
       "3              NaN             NaN             NaN             NaN   \n",
       "5              NaN             NaN             NaN             NaN   \n",
       "11             NaN             NaN             NaN             NaN   \n",
       "\n",
       "    total_sqft_993  total_sqft_994  total_sqft_995  total_sqft_996  \\\n",
       "0              NaN             NaN             NaN             NaN   \n",
       "1              NaN             NaN             NaN             NaN   \n",
       "3              NaN             NaN             NaN             NaN   \n",
       "5              NaN             NaN             NaN             NaN   \n",
       "11             NaN             NaN             NaN             NaN   \n",
       "\n",
       "    total_sqft_999  \n",
       "0              NaN  \n",
       "1              NaN  \n",
       "3              NaN  \n",
       "5              NaN  \n",
       "11             NaN  \n",
       "\n",
       "[5 rows x 4998 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfnooutlier=ds3[(ds3>lower)&(ds3<upper)]\n",
    "dfnooutlier.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "013f6ddd-7604-4e5a-9bc6-85f271108fec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bath</th>\n",
       "      <th>balcony</th>\n",
       "      <th>area_type_Carpet  Area</th>\n",
       "      <th>area_type_Plot  Area</th>\n",
       "      <th>area_type_Super built-up  Area</th>\n",
       "      <th>availability_15-Aug</th>\n",
       "      <th>availability_15-Dec</th>\n",
       "      <th>availability_15-Jun</th>\n",
       "      <th>availability_16-Dec</th>\n",
       "      <th>availability_16-Jan</th>\n",
       "      <th>...</th>\n",
       "      <th>total_sqft_986</th>\n",
       "      <th>total_sqft_987</th>\n",
       "      <th>total_sqft_990</th>\n",
       "      <th>total_sqft_991</th>\n",
       "      <th>total_sqft_992</th>\n",
       "      <th>total_sqft_993</th>\n",
       "      <th>total_sqft_994</th>\n",
       "      <th>total_sqft_995</th>\n",
       "      <th>total_sqft_996</th>\n",
       "      <th>total_sqft_999</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7028</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5582</th>\n",
       "      <td>7.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>661</th>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5308</th>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4096</th>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 4997 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      bath  balcony  area_type_Carpet  Area  area_type_Plot  Area  \\\n",
       "7028   1.0      1.0                       0                     0   \n",
       "5582   7.0      2.0                       0                     1   \n",
       "661    2.0      0.0                       0                     0   \n",
       "5308   2.0      2.0                       0                     0   \n",
       "4096   2.0      1.0                       0                     0   \n",
       "\n",
       "      area_type_Super built-up  Area  availability_15-Aug  \\\n",
       "7028                               1                    0   \n",
       "5582                               0                    0   \n",
       "661                                1                    0   \n",
       "5308                               1                    0   \n",
       "4096                               1                    0   \n",
       "\n",
       "      availability_15-Dec  availability_15-Jun  availability_16-Dec  \\\n",
       "7028                    0                    0                    0   \n",
       "5582                    0                    0                    0   \n",
       "661                     0                    0                    0   \n",
       "5308                    0                    0                    0   \n",
       "4096                    0                    0                    0   \n",
       "\n",
       "      availability_16-Jan  ...  total_sqft_986  total_sqft_987  \\\n",
       "7028                    0  ...               0               0   \n",
       "5582                    0  ...               0               0   \n",
       "661                     0  ...               0               0   \n",
       "5308                    0  ...               0               0   \n",
       "4096                    0  ...               0               0   \n",
       "\n",
       "      total_sqft_990  total_sqft_991  total_sqft_992  total_sqft_993  \\\n",
       "7028               0               0               0               0   \n",
       "5582               0               0               0               0   \n",
       "661                0               0               0               0   \n",
       "5308               0               0               0               0   \n",
       "4096               0               0               0               0   \n",
       "\n",
       "      total_sqft_994  total_sqft_995  total_sqft_996  total_sqft_999  \n",
       "7028               0               0               0               0  \n",
       "5582               0               0               0               0  \n",
       "661                0               0               0               0  \n",
       "5308               0               0               0               0  \n",
       "4096               0               0               0               0  \n",
       "\n",
       "[5 rows x 4997 columns]"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X=ds3.drop(\"price\",axis=1)\n",
    "y=ds3.loc[:,\"price\"]\n",
    "y=np.array(y).reshape(-1,1)\n",
    "y[:10]\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.45, random_state=44, shuffle =True)\n",
    "X_test.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "0141b506-0d4c-4af2-8a04-9b772e28299a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.60614709,  0.47223559, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       [-0.52955214,  1.75118113, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       [-0.52955214,  0.47223559, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       ...,\n",
       "       [-0.52955214,  0.47223559, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       [ 1.74184633,  0.47223559, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       [-1.66525138, -0.80670995, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753]])"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#minmax:\n",
    "scaler=StandardScaler()\n",
    "X_train_scaler=scaler.fit_transform(X_train)\n",
    "X_train_scaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "77d4b7d8-eb7a-46a9-9357-236ec33395ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-1.66525138, -0.80670995, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       [ 5.14894404,  0.47223559, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       [-0.52955214, -2.08565548, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       ...,\n",
       "       [ 0.60614709,  0.47223559, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       [ 0.60614709, -0.80670995, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753],\n",
       "       [-0.52955214, -0.80670995, -0.08983559, ..., -0.03116641,\n",
       "        -0.02698763, -0.01557753]])"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test_scaler=scaler.transform(X_test)\n",
    "X_test_scaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "55276661-cb9f-4cdc-8f02-117d3ac568a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "linear=LinearRegression()\n",
    "linear.fit(X_train_scaler,y_train)\n",
    "linear"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "6a2364b0-4cf4-431f-a054-136c1418c187",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-9.323537100240539e+26"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "linear.score(X_test_scaler,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "f1e1dc8b-6a44-42f2-8d06-2747cf831f9a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9710859274003603"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "linear.score(X_train_scaler,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "5b4457e2-99d6-4421-8aeb-f5ccd0fc647f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-3.80575142e+14],\n",
       "       [-6.48502834e+14],\n",
       "       [ 4.93004245e+01],\n",
       "       ...,\n",
       "       [ 1.97941050e+02],\n",
       "       [ 1.28456675e+02],\n",
       "       [ 2.64622287e+01]])"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred=linear.predict(X_test_scaler)\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "4c167923-3cd8-448e-b314-e4bd29658a22",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error Value is :  1245241247565100.2\n"
     ]
    }
   ],
   "source": [
    "MAEValue = mean_absolute_error(y_test, y_pred, multioutput='uniform_average') # it can be raw_values\n",
    "print('Mean Absolute Error Value is : ', MAEValue)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "bf7d54b1-d2c4-4246-a600-d3fce5d4e031",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Squared Error Value is :  1.060271316974551e+31\n"
     ]
    }
   ],
   "source": [
    "MSEValue = mean_squared_error(y_test, y_pred, multioutput='uniform_average') # it can be raw_values\n",
    "print('Mean Squared Error Value is : ', MSEValue)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dd990c56-9c4b-4fb3-81e4-9d4da67545c2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4a31f033-15fb-418f-8419-28073f830e4b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
